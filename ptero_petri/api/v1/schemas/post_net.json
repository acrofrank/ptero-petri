{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "POST /v1/nets",
    "description": "Create a new net.",
    "definitions": {
        "transitions": {
            "basic": {
                "type": "object",
                "description": "TODO write a description",
                "properties": {
                    "action": {
                        "oneOf": [
                            { "$ref": "#/definitions/actions/basic/convert_to_parent_color" },
                            { "$ref": "#/definitions/actions/basic/create_color_group" },
                            { "$ref": "#/definitions/actions/basic/expire" },
                            { "$ref": "#/definitions/actions/basic/notify" },
                            { "$ref": "#/definitions/actions/basic/split" }
                        ]
                    },
                    "inputs": { "$ref": "#/definitions/places" },
                    "outputs": { "$ref": "#/definitions/places" },
                    "type": {
                        "type": "string",
                        "pattern": "basic"
                    }
                },
                "required": ["inputs"],
                "additionalProperties": false
            },
            "barrier": {
                "type": "object",
                "description": "TODO write a description",
                "properties": {
                    "action": { "$ref": "#/definitions/actions/barrier/join" },
                    "inputs": { "$ref": "#/definitions/places" },
                    "outputs": { "$ref": "#/definitions/places" },
                    "type": {
                        "type": "string",
                        "pattern": "barrier"
                    }
                },
                "required": ["inputs", "type"],
                "additionalProperties": false
            }
        },
        "places": {
            "type": "array",
            "description": "TODO should a places list have at least one place? is unique appropriate?",
            "uniqueItems": true,
            "items": { "$ref": "#/definitions/place" }
        },
        "place": {
            "type": "string",
            "description": "TODO is empty place name okay?",
            "minLength": 1
        },
        "actions": {
            "barrier": {
                "join": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "pattern": "join"
                        }
                    },
                    "required": ["type"],
                    "additionalProperties": false
                }
            },
            "basic": {
                "convert_to_parent_color": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "pattern": "convert-to-parent-color"
                        }
                    },
                    "required": ["type"],
                    "additionalProperties": false
                },
                "create_color_group": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "pattern": "create-color-group"
                        },
                        "response_places": {
                            "type": "object",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "url": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "required": ["type"],
                    "additionalProperties": false
                },
                "expire": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "pattern": "expire"
                        },
                        "ttl_seconds": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "required": ["type", "ttl_seconds"],
                    "additionalProperties": false
                },
                "notify": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "pattern": "notify"
                        },
                        "requested_data": {
                            "type": "array",
                            "minItems": 1,
                            "maxItems": 1,
                            "items": {
                                "type": "string",
                                "pattern": "color_group_size"
                            }
                        },
                        "response_places": {
                            "type": "object",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "url": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "required": ["type", "url"],
                    "additionalProperties": false
                },
                "split": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "pattern": "split"
                        }
                    },
                    "required": ["type"],
                    "additionalProperties": false
                }
            }
        }
    },
    "type": "object",
    "properties": {
        "initialMarking": {
            "type": "array",
            "items": {"$ref": "#/definitions/place"},
            "minItems": 1
        },
        "transitions": {
            "type": "array",
            "description": "TODO disallow 0 transitions?",
            "items": {
                "type": "object",
                "oneOf": [
                    { "$ref": "#/definitions/transitions/basic" },
                    { "$ref": "#/definitions/transitions/barrier" }
                ]
            },
            "minItems": 1
        }
    },
    "required": ["initialMarking", "transitions"],
    "additionalProperties": false
}
