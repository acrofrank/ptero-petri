#!/usr/bin/env python

import argparse
import os
import psutil
import signal
import subprocess


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('--max-run-time', type=int)

    return parser.parse_args()


def handler(signum, frame):
    p = psutil.Process()
    for child in p.children():
        child.send_signal(signum)


def _api_webserver_path():
    return os.path.join(os.path.dirname(__file__), 'ptero_petri/api/wsgi.py')


def _start_api_server():
    env = os.environ.data
    env['PYTHONPATH'] = os.path.dirname(__file__)
    return subprocess.Popen(['python', _api_webserver_path()], env=env,
            close_fds=True)


def _start_petri_worker():
    return subprocess.Popen(['true'], close_fds=True)


def main():
    api_server = _start_api_server()
    petri_worker = _start_petri_worker()
    api_server.wait()
    petri_worker.wait()


if __name__ == '__main__':
    arguments = parse_args()

    signal.signal(signal.SIGINT, handler)
    signal.signal(signal.SIGTERM, handler)

    if arguments.max_run_time:
        signal.signal(signal.SIGALRM, handler)
        signal.alarm(arguments.max_run_time)

    main()
